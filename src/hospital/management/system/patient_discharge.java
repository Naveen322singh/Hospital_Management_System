package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.*;import java.sql.ResultSet;import java.util.Date;public class patient_discharge extends JFrame {    patient_discharge() {        setTitle("Patient Discharge");        setUndecorated(true);        setSize(800, 400);        setLayout(null);        setLocationRelativeTo(null);        JPanel panel = new JPanel();        panel.setBounds(5, 5, 790, 390);        panel.setBackground(new Color(90, 156, 163));        panel.setLayout(null);        add(panel);        JLabel label = new JLabel("CHECK-OUT");        label.setBounds(100, 20, 200, 25);        label.setFont(new Font("Tahoma", Font.BOLD, 22));        label.setForeground(Color.WHITE);        panel.add(label);        // Labels        String[] fieldNames = {"Customer Id", "Room Number", "In Time", "Out Time"};        int[] yPos = {80, 130, 180, 230};        for (int i = 0; i < fieldNames.length; i++) {            JLabel fieldLabel = new JLabel(fieldNames[i]);            fieldLabel.setBounds(30, yPos[i], 150, 20);            fieldLabel.setFont(new Font("Tahoma", Font.BOLD, 14));            fieldLabel.setForeground(Color.WHITE);            panel.add(fieldLabel);        }        // Choice dropdown        Choice choice = new Choice();        choice.setBounds(200, 80, 150, 25);        panel.add(choice);        // Room No. + Time Labels        JLabel RNo = new JLabel();        RNo.setBounds(200, 130, 250, 20);        RNo.setFont(new Font("Tahoma", Font.BOLD, 14));        RNo.setForeground(Color.WHITE);        panel.add(RNo);        JLabel INTime = new JLabel();        INTime.setBounds(200, 180, 300, 20);        INTime.setFont(new Font("Tahoma", Font.BOLD, 14));        INTime.setForeground(Color.WHITE);        panel.add(INTime);        JLabel OUTTime = new JLabel(new Date().toString());        OUTTime.setBounds(200, 230, 300, 20);        OUTTime.setFont(new Font("Tahoma", Font.BOLD, 14));        OUTTime.setForeground(Color.WHITE);        panel.add(OUTTime);        // Load customer IDs into choice        try {            conn c = new conn();            ResultSet resultSet = c.statement.executeQuery("SELECT * FROM Patient_Info");            while (resultSet.next()) {                choice.add(resultSet.getString("number"));            }        } catch (Exception e) {            e.printStackTrace();        }        // Buttons        JButton dischargeBtn = createStyledButton("Discharge", 30, 300);        JButton checkBtn = createStyledButton("Check", 170, 300);        JButton backBtn = createStyledButton("Back", 310, 300);        panel.add(dischargeBtn);        panel.add(checkBtn);        panel.add(backBtn);        // Actions        checkBtn.addActionListener(e -> {            try {                conn c = new conn();                ResultSet rs = c.statement.executeQuery("SELECT * FROM Patient_Info WHERE number = '" + choice.getSelectedItem() + "'");                while (rs.next()) {                    RNo.setText(rs.getString("Room_Number"));                    INTime.setText(rs.getString("Time"));                }            } catch (Exception ex) {                ex.printStackTrace();            }        });        dischargeBtn.addActionListener(e -> {            try {                conn c = new conn();                c.statement.executeUpdate("DELETE FROM Patient_Info WHERE number = '" + choice.getSelectedItem() + "'");                c.statement.executeUpdate("UPDATE room SET Availability = 'Available' WHERE room_no = '" + RNo.getText() + "'");                JOptionPane.showMessageDialog(null, "Discharge Successful");                setVisible(false);            } catch (Exception ex) {                ex.printStackTrace();            }        });        backBtn.addActionListener(e -> setVisible(false));        setVisible(true);    }    // Helper method for creating styled buttons with hover effect    private JButton createStyledButton(String text, int x, int y) {        JButton button = new JButton(text);        button.setBounds(x, y, 120, 30);        button.setBackground(Color.BLACK);        button.setForeground(Color.WHITE);        button.setFocusPainted(false);        button.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));        button.setFont(new Font("Tahoma", Font.BOLD, 13));        // Hover effect        button.addMouseListener(new MouseAdapter() {            public void mouseEntered(MouseEvent e) {                button.setBackground(Color.WHITE);                button.setForeground(Color.BLACK);                button.setBorder(BorderFactory.createLineBorder(Color.BLACK));            }            public void mouseExited(MouseEvent e) {                button.setBackground(Color.BLACK);                button.setForeground(Color.WHITE);            }        });        return button;    }    public static void main(String[] args) {        new patient_discharge();    }}