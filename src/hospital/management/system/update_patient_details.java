package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.*;import java.sql.ResultSet;public class update_patient_details extends JFrame {    update_patient_details() {        setTitle("Update Patient Details");        setUndecorated(true);        setSize(950, 500);        setLayout(null);        setLocationRelativeTo(null);        JPanel panel = new JPanel();        panel.setBounds(5, 5, 940, 490);        panel.setBackground(new Color(90, 156, 163));        panel.setLayout(null);        add(panel);        // Image        ImageIcon icon = new ImageIcon(ClassLoader.getSystemResource("icon/updated.png"));        Image scaled = icon.getImage().getScaledInstance(300, 300, Image.SCALE_DEFAULT);        JLabel imageLabel = new JLabel(new ImageIcon(scaled));        imageLabel.setBounds(500, 60, 300, 300);        panel.add(imageLabel);        // Title        JLabel title = new JLabel("Update Patient Details");        title.setBounds(124, 11, 300, 25);        title.setFont(new Font("Tahoma", Font.BOLD, 20));        title.setForeground(Color.WHITE);        panel.add(title);        // Form labels        String[] labels = {                "Name :", "Room Number :", "In-Time :",                "Amount Paid (Rs) :", "Pending Amount (Rs) :"        };        int y = 88;        for (String text : labels) {            JLabel lbl = new JLabel(text);            lbl.setBounds(25, y, 200, 20);            lbl.setFont(new Font("Tahoma", Font.PLAIN, 14));            lbl.setForeground(Color.WHITE);            panel.add(lbl);            y += 41;        }        // Choice for name        Choice patientChoice = new Choice();        patientChoice.setBounds(248, 85, 140, 25);        panel.add(patientChoice);        // Populate names        try {            conn c = new conn();            ResultSet rs = c.statement.executeQuery("SELECT * FROM Patient_Info");            while (rs.next()) {                patientChoice.add(rs.getString("Name"));            }        } catch (Exception e) {            e.printStackTrace();        }        // Text fields        JTextField tfRoom = new JTextField();        JTextField tfTime = new JTextField();        JTextField tfPaid = new JTextField();        JTextField tfPending = new JTextField();        JTextField[] fields = {tfRoom, tfTime, tfPaid, tfPending};        y = 129;        for (JTextField tf : fields) {            tf.setBounds(248, y, 140, 25);            panel.add(tf);            y += 45;        }        // Buttons        JButton btnCheck = createButton("CHECK", 281, 378);        panel.add(btnCheck);        JButton btnUpdate = createButton("UPDATE", 56, 378);        panel.add(btnUpdate);        JButton btnBack = createButton("BACK", 168, 378);        panel.add(btnBack);        // Button actions        btnCheck.addActionListener(e -> {            String selectedName = patientChoice.getSelectedItem();            String query = "SELECT * FROM Patient_Info WHERE Name = '" + selectedName + "'";            try {                conn c = new conn();                ResultSet rs = c.statement.executeQuery(query);                if (rs.next()) {                    tfRoom.setText(rs.getString("Room_Number"));                    tfTime.setText(rs.getString("Time"));                    tfPaid.setText(rs.getString("Deposite"));                }                ResultSet rs2 = c.statement.executeQuery("SELECT * FROM room WHERE room_no = '" + tfRoom.getText() + "'");                if (rs2.next()) {                    int price = Integer.parseInt(rs2.getString("Price"));                    int paid = Integer.parseInt(tfPaid.getText().trim());                    tfPending.setText(String.valueOf(price - paid));                }            } catch (Exception ex) {                JOptionPane.showMessageDialog(null, "Error loading data: " + ex.getMessage());            }        });        btnUpdate.addActionListener(e -> {            try {                String name = patientChoice.getSelectedItem();                String room = tfRoom.getText();                String time = tfTime.getText();                String paid = tfPaid.getText();                conn c = new conn();                c.statement.executeUpdate(                        "UPDATE Patient_Info SET Room_Number = '" + room +                                "', Time = '" + time +                                "', Deposite = '" + paid +                                "' WHERE Name = '" + name + "'"                );                JOptionPane.showMessageDialog(null, "Updated Successfully");                setVisible(false);            } catch (Exception ex) {                JOptionPane.showMessageDialog(null, "Error updating data: " + ex.getMessage());            }        });        btnBack.addActionListener(e -> setVisible(false));        setVisible(true);    }    private JButton createButton(String text, int x, int y) {        JButton button = new JButton(text);        button.setBounds(x, y, 89, 25);        button.setFont(new Font("Tahoma", Font.BOLD, 12));        button.setBackground(Color.BLACK);        button.setForeground(Color.WHITE);        button.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));        button.setFocusPainted(false);        button.addMouseListener(new MouseAdapter() {            public void mouseEntered(MouseEvent e) {                button.setBackground(Color.WHITE);                button.setForeground(Color.BLACK);            }            public void mouseExited(MouseEvent e) {                button.setBackground(Color.BLACK);                button.setForeground(Color.WHITE);            }        });        return button;    }    public static void main(String[] args) {        new update_patient_details();    }}